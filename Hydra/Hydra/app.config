<?xml version="1.0"?>
<!--
NOTICE!!!  This program and source code is owned and licensed by
StockSharp, LLC, www.stocksharp.com
Viewing or use of this code requires your acceptance of the license
agreement found at https://github.com/StockSharp/StockSharp/blob/master/LICENSE
Removal of this comment is a violation of the license agreement.

Project: %Namespace%.HydraPublic
File: app.config
Created: 2015, 11, 11, 2:32 PM

Copyright 2010 by StockSharp, LLC
-->
<configuration>
	<configSections>
		<section name="hydra" type="StockSharp.Hydra.Configuration.HydraSection, Hydra"/>
		<section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Ecng.Configuration"/>
	</configSections>

	<runtime>
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<probing privatePath="Plugins"/>
		</assemblyBinding>
	</runtime>

	<startup>
		<supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5.1"/>
	</startup>
	<system.data>
		<DbProviderFactories>
			<add name="SQLite Data Provider" invariant="System.Data.SQLite" description=".Net Framework Data Provider for SQLite" type="System.Data.SQLite.SQLiteFactory, System.Data.SQLite"/>
		</DbProviderFactories>
	</system.data>

	<appSettings>
		<add key="settingsPath" value="%Documents%\StockSharp\Hydra\"/>
		<add key="txt_export_ticks" value="{ServerTime:yyyyMMdd};{ServerTime:HHmmssffffff zzz};{TradeId};{TradePrice};{TradeVolume};{OriginSide}"/>
		<add key="txt_export_securities" value="{SecurityId.SecurityCode};{SecurityId.BoardCode};{PriceStep};{SecurityType};{VolumeStep};{Multiplier};{Decimals}"/>
		<add key="txt_export_orderlog" value="{ServerTime:yyyyMMdd};{ServerTime:HHmmssffffff zzz};{IsSystem};{OrderId};{OrderPrice};{OrderVolume};{Side};{OrderState};{TimeInForce};{TradeId};{TradePrice}"/>
		<add key="txt_export_news" value="{ServerTime:yyyyMMdd};{ServerTime:HHmmss zzz};{Headline};{Source};{Url}"/>
		<add key="txt_export_level1" value="{ServerTime:yyyyMMdd};{ServerTime:HHmmssffffff zzz};{Changes:{BestBidPrice};{BestBidVolume};{BestAskPrice};{BestAskVolume};{LastTradeTime};{LastTradePrice};{LastTradeVolume}}"/>
		<add key="txt_export_depths" value="{ServerTime:yyyyMMdd};{ServerTime:HHmmssffffff zzz};{Price};{Volume};{Side}"/>
		<add key="txt_export_candles" value="{OpenTime:yyyyMMdd};{OpenTime:HHmmss zzz};{OpenPrice};{HighPrice};{LowPrice};{ClosePrice};{TotalVolume}"/>
		<add key="txt_export_transactions" value="{ServerTime:yyyyMMdd};{ServerTime:HHmmssffffff zzz};{PortfolioName};{TransactionId};{OrderId};{OrderPrice};{OrderVolume};{Balance};{Side};{OrderType};{OrderState};{TradeId};{TradePrice};{TradeVolume}"/>
	</appSettings>
  
	<connectionStrings>
		<!--<add name="SqlServerConStr" connectionString="Server=.\SQLExpress;Database=Trading;User ID=trading;Password=trading;" providerName=""/>-->
		<add name="SQLiteConStr" connectionString="Data Source=%Documents%\StockSharp\Hydra\StockSharp.db" providerName="System.Data.SQLite"/>
	</connectionStrings>

	<hydra>
		<customCandles />
		<customIndicators />
	</hydra>

	<unity>
		<containers>
			<container>
				<types>
					<register type="Ecng.Serialization.IStorage, Ecng.Serialization" mapTo="Ecng.Data.HierarchicalDatabase, Ecng.Data">
						<constructor>
							<param name="name" value="Hydra Database"/>
							<param name="connectionString">
								<!-- По умолчанию используется SQLite -->
								<value value="SQLiteConStr" typeConverter="Ecng.Configuration.ConnectionSettingsTypeConverter, Ecng.Configuration"/>
								<!--<value value="SqlServerConStr" typeConverter="Ecng.Configuration.ConnectionSettingsTypeConverter, Ecng.Configuration"/>-->
							</param>
						</constructor>

						<!-- SQLite не поддерживает хранимые процедуры -->
						<!--<property name="CommandType" value="StoredProcedure" />-->

						<!-- Для других баз данных провайдер необходимо поменять -->
						<property name="Provider">
							<dependency type="Ecng.Data.Providers.SQLiteDatabaseProvider, Ecng.Data.Providers"/>
						</property>

						<property name="AllowDeleteAll" value="true"/>

						<lifetime type="singleton"/>
					</register>

					<register type="StockSharp.Algo.Storages.IEntityRegistry, StockSharp.Algo" mapTo="StockSharp.Hydra.Core.HydraEntityRegistry, StockSharp.Hydra.Core">
						<constructor>
							<param name="storage">
								<dependency type="Ecng.Serialization.IStorage, Ecng.Serialization"/>
							</param>
						</constructor>

						<!-- Путь, по которому будут записываться маркет-данные -->
						<!--<property name="BasePath" propertyType="System.String" value="" />-->

						<lifetime type="singleton"/>
					</register>
				
					<!-- Пользовательский модель авторзации S#.Data Server клиентских запросов -->
					<!--<register type="StockSharp.Algo.History.Hydra.IRemoteStorageAuthorization, StockSharp.Algo" mapTo="StockSharp.Algo.History.Hydra.WindowsRemoteStorageAuthorization, StockSharp.Algo">
					</register>-->
				</types>
			</container>
		</containers>
	</unity>

	<system.serviceModel>
		<services>
			<service name="StockSharp.Hydra.Server.HydraServer">
				<endpoint address="" binding="netTcpBinding" bindingConfiguration="tcpbinding_config" contract="StockSharp.Algo.History.Hydra.IRemoteStorage"/>
				<host>
					<baseAddresses>
						<add baseAddress="net.tcp://localhost:8000"/>
					</baseAddresses>
				</host>
			</service>
		</services>
		<bindings>
			<netTcpBinding>
				<binding name="tcpbinding_config" transferMode="StreamedResponse" receiveTimeout="00:05:00" sendTimeout="01:00:00" maxBufferPoolSize="2147483647" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647">
					<security mode="None"/>
					<readerQuotas maxArrayLength="2147483647" maxBytesPerRead="2147483647"/>
				</binding>
			</netTcpBinding>
		</bindings>
		<behaviors>
			<serviceBehaviors>
				<behavior>
					<dataContractSerializer maxItemsInObjectGraph="2147483647"/>
					<serviceDebug httpHelpPageEnabled="true" includeExceptionDetailInFaults="true"/>
				</behavior>
			</serviceBehaviors>
		</behaviors>
	</system.serviceModel>
</configuration>
